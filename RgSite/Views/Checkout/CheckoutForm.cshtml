@model RgSite.ViewModels.CheckoutFormViewModel

@{
    ViewData["Title"] = "Checkout";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container checkout-form">
    <div class="row">
        <!--Order Details-->
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">YOUR ORDER</span>
                <span class="badge badge-secondary badge-pill">@Model.ShoppingCart.CartItems.Count</span>
            </h4>
            <ul class="list-group mb-3">
                @foreach (var item in Model.ShoppingCart.CartItems)
                {
                    <li class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6 class="my-0">@item.Name</h6>
                            <small class="text-muted">@item.DisplaySize. <span class="badge badge-secondary">@item.Quantity</span></small>
                        </div>
                        <span class="text-muted">@item.DisplayTotal</span>
                    </li>
                }
                <li class="list-group-item d-flex justify-content-between">
                    <span>SUBTOTAL</span>
                    <strong>@Model.ShoppingCart.DisplaySubTotal</strong>
                </li>
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <p class="my-0">SHIPPING</p>
                        <a class="btn btn-primary btn-sm custom-button-color" role="button" asp-controller="ShoppingCart" asp-action="CalculateShipping">CALCULATE</a>
                    </div>
                    <strong>@Model.ShoppingCart.DisplayShippingCost</strong>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <span>TOTAL</span>
                    <strong>@Model.ShoppingCart.DisplayTotal</strong>
                </li>
            </ul>

            <form class="card p-2">
                <div class="input-group">
                    <input type="text" class="form-control" placeholder="Promo code">
                    <div class="input-group-append">
                        <button type="submit" class="btn btn-secondary">Redeem</button>
                    </div>
                </div>
            </form>
        </div>

        <!--Billing Details-->
        <div class="col-md-8 order-md-1">
            <h4 class="mb-3">BILLING DETAILS</h4>
            <form id="payment-form" asp-controller="ShoppingCart" asp-action="Payment" class="form-horizontal" enctype="multipart/form-data">
                <div class="row">
                    <div class="form-group col-md-6 mb-3">
                        <label asp-for="FirstName" class="control-label"></label>
                        <input asp-for="FirstName" class="form-control" />
                        <span asp-validation-for="FirstName" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-6 mb-3">
                        <label asp-for="LastName" class="control-label"></label>
                        <input asp-for="LastName" class="form-control" />
                        <span asp-validation-for="LastName" class="text-danger"></span>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6 mb-3">
                        <label asp-for="Email" class="control-label"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-6 mb-3">
                        <label asp-for="Phone" class="control-label"></label>
                        <input asp-for="Phone" class="form-control" />
                        <span asp-validation-for="Phone" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="CompanyName" class="control-label"></label>
                    <input asp-for="CompanyName" class="form-control" />
                    <span asp-validation-for="CompanyName" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Address.Street" class="control-label"></label>
                    <input asp-for="Address.Street" class="form-control" />
                    <span asp-validation-for="Address.Street" class="text-danger"></span>
                </div>

                <!--Need to change-->
                <div class="row">
                    <div class="form-group col-md-5 mb-3">
                        <label asp-for="Address.City" class="control-label"></label>
                        <input asp-for="Address.City" class="form-control" />
                        <span asp-validation-for="Address.City" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-4 mb-3">
                        <label asp-for="Address.State"></label>
                        @Html.DropDownListFor(s => s.Address.State.Id, new SelectList(Model.States, "Id", "Name"), "Select", new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-3 mb-3">
                        <label asp-for="Address.Zip" class="control-label"></label>
                        <input asp-for="Address.Zip" class="form-control" />
                        <span asp-validation-for="Address.Zip" class="text-danger"></span>
                    </div>
                </div>
                <hr class="mb-4">
                <div class="custom-control custom-checkbox">
                    <input asp-for="ShipToDifferentAddress" type="checkbox" class="custom-control-input" id="different-address">
                    <label asp-for="ShipToDifferentAddress" class="custom-control-label" for="different-address"></label>
                </div>
                <hr class="mb-4">

                <!--Payment details-->
                <!--<h4 class="mb-3">Payment</h4>
                <div class="row">
                    <div id="card-element" class="col-md-10 mb-2"></div>-->

                    <!-- Used to display Element errors. -->
                    <!--<div id="card-errors" role="alert"></div>
                </div>
                <hr class="mb-4">-->

                <button class="btn btn-primary btn-lg btn-block custom-button-color" type="submit">Continue to payment</button>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>

    <script>
        var stripe = Stripe('@Model.StripePublicKey');
        var elements = stripe.elements();

        //var style = {
        //    base: {
        //    // Add your base input styles here. For example:
        //    fontSize: '16px',
        //    color: '#32325d',
        //    },
        //};

        //var card = elements.create("card", { style: style })
        //card.mount("#card-element");

        //// Handle real-time validation errors from the card element
        //card.addEventListener('change', function (event) {
        //    var displayError = document.getElementById('card-errors');
        //    if (event.error) {
        //        displayError.textContent = event.error.message;
        //    } else {
        //        displayError.textContent = '';
        //    }
        //});

        //// Handle form submission. Create a token or display an error when the form is submitted.
        //var form = document.getElementById('payment-form');

        //form.addEventListener('submit', function(event) {
        //    event.preventDefault();

        //    stripe.createToken(card).then(function(result) {
        //        if (result.error) {
        //            // Inform the customer that there was an error.
        //            var errorElement = document.getElementById('card-errors');
        //            errorElement.textContent = result.error.message;
        //        } else {
        //            // Send the token to your server.
        //            stripeTokenHandler(result.token);
        //        }
        //    });
        //});

        //function stripeTokenHandler(token) {
        //    // Insert the token ID into the form so it gets submitted to the server
        //    var form = document.getElementById('payment-form');
        //    var hiddenInput = document.createElement('input');
        //    hiddenInput.setAttribute('type', 'hidden');
        //    hiddenInput.setAttribute('name', 'stripeToken');
        //    hiddenInput.setAttribute('value', token.id);
        //    form.appendChild(hiddenInput);

        //    // Submit the form
        //    form.submit();
        //}
    </script>
}


<style>
    .checkout-form {
        padding-top: 20px;
    }

    .custom-button-color {
        background-color: #e11383;
	    border-color: #e11383;
        color: white !important;
    }

    .custom-button-color:hover {
        background-color: #e11383;
	    border-color: #e11383;
    }
</style>